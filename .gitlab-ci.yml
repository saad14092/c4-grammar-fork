variables:
  GIT_SUBMODULE_STRATEGY: recursive
  LANGUAGE_SERVER_DIR: server/c4-dsl-language-server

stages:
  - server
  - client
  - deploy
  - visualize

c4-language-server:
  image: gradle:jdk11
  stage: server

  script:
    - cd $LANGUAGE_SERVER_DIR
    - ./gradlew check jacocoTestReport
    - ./gradlew deploy -PcopyTo=../../../../extension/server

  artifacts:
    when: always
    reports:
      junit: $LANGUAGE_SERVER_DIR/build/test-results/test/**/TEST-*.xml
    paths:
      - $CI_PROJECT_DIR/extension/server/c4-language-server
      - $CI_PROJECT_DIR/$LANGUAGE_SERVER_DIR/build/reports/jacoco/test/html
      - $CI_PROJECT_DIR/$LANGUAGE_SERVER_DIR/build/reports/jacoco/test/jacocoTestReport.xml
    expire_in: 60 min

c4-language-client:
  image: node:14
  stage: client

  variables:
    NODE_ENV: "development"

  script:
    - cd extension
    - yarn install
    - yarn build
    - yarn global add vsce
    - find . -name *.jar
    - vsce package
    - cat ../$LANGUAGE_SERVER_DIR/build/reports/jacoco/test/html/index.html | grep -o 'Total[^%]*%'

  dependencies:
    - c4-language-server

  artifacts:
    paths:
      - $CI_PROJECT_DIR/extension/*.vsix
    expire_in: 1 day

pages:
  stage: deploy
  dependencies:
    - c4-language-server
  script:
    - mv $LANGUAGE_SERVER_DIR/build/reports/jacoco/test/html/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master

coverage-jdk11:
  stage: visualize
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.7
  script:
    # convert report from jacoco to cobertura, using relative project path
    - python /opt/cover2cover.py $CI_PROJECT_DIR/$LANGUAGE_SERVER_DIR/build/reports/jacoco/test/jacocoTestReport.xml $CI_PROJECT_DIR/$LANGUAGE_SERVER_DIR/src/main/java/ > $CI_PROJECT_DIR/$LANGUAGE_SERVER_DIR/build/cobertura.xml
  needs: ["c4-language-server"]
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: $CI_PROJECT_DIR/$LANGUAGE_SERVER_DIR/build/cobertura.xml
