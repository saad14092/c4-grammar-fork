plugins {
	id 'com.github.johnrengelman.shadow' version '5.1.0'
}

dependencies {
	compile project(':de.systemticks.c4.dsl')
	compile "org.eclipse.xtext:org.eclipse.xtext.ide:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase.ide:${xtextVersion}"
}

apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
mainClassName = "org.eclipse.xtext.ide.server.ServerLauncher"
applicationName = 'c4-language-server'

shadowJar {
	from(project.convention.getPlugin(JavaPluginConvention).sourceSets.main.output)
	configurations = [project.configurations.runtime]
	exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA','schema/*',
		'.options', '.api_description', '*.profile', '*.html', 'about.*', 'about_files/*',
		'plugin.xml', 'modeling32.png', 'systembundle.properties', 'profile.list')
	classifier = null
	append('plugin.properties')
}

task unzipServer(type: Copy, dependsOn: distZip) {
	def zipFile = file("${buildDir}/distributions/c4-language-server-1.0.0-SNAPSHOT.zip")
	def outputDir = file("${buildDir}/../../../extension/server")

	from zipTree(zipFile)
	into outputDir
}

build.dependsOn unzipServer

//this is an eclipse plugin project
//eclipseClasspath.enabled=false
//cleanEclipseClasspath.enabled=false
