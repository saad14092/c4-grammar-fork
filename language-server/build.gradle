/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10.2/userguide/java_library_plugin.html
 */

plugins {
    id 'java-library'
    id 'eclipse'
	id 'application'
	id 'jacoco'
}

application {
	mainClassName = 'de.systemticks.c4dsl.ls.C4LanguageServerLauncher'
	applicationName = 'c4-language-server'
	applicationDefaultJvmArgs = ["-Dfile.encoding=UTF8", "-Dapple.awt.UIElement=true"]
}

startScripts {
	doLast {
		windowsScript.text = windowsScript.text.replaceAll('set CLASSPATH=.*', 'set CLASSPATH=.;%APP_HOME%/lib/*')
	}
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {

	//the patched structurizr/dsl dependency, provinding parser callbacks	
	implementation 'com.github.torsten-systemticks:dsl:b3fef851e4'

	// other structurizr dependencies		
//	implementation 'com.structurizr:structurizr-plantuml:1.6.3'
//	implementation 'com.structurizr:structurizr-mermaid:1.4.1'
	implementation 'com.structurizr:structurizr-client:1.17.0'
	implementation 'com.structurizr:structurizr-export:1.8.2'

	// language server protocol
	implementation group: 'org.eclipse.lsp4j', name: 'org.eclipse.lsp4j', version: '0.14.0'
	
	implementation 'ch.qos.logback:logback-classic:1.2.6'
	implementation 'info.picocli:picocli:4.6.2'
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'

    // Use JUnit test framework
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	testImplementation 'org.mockito:mockito-core:4.8.0'
	testImplementation 'org.mockito:mockito-inline:4.8.0'
	testImplementation 'org.assertj:assertj-core:3.23.1'

}

test {
  useJUnitPlatform()
}

task deployToVSCode(type: Copy, dependsOn: distZip) {
	def zipFile = file("${buildDir}/distributions/c4-language-server.zip")
	def outputDir = file("${buildDir}/../../extension/server")

	fileMode = 0755

	from zipTree(zipFile)
	into outputDir
	
	exclude '**/kotlin*.jar'
	exclude '**/groovy*.jar'
	exclude '**/jruby*.jar'
	exclude '**/jnr*.jar'
	exclude '**/jcodings*.jar'
	exclude '**/jffi*.jar'
}

task cleanDeployedServer(type: Delete) {
	delete fileTree("${buildDir}/../../extension/server")
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
	reports {
		xml.required = true
	}
    dependsOn test
}

build.dependsOn deployToVSCode

clean.dependsOn cleanDeployedServer

allprojects {
	repositories {
		jcenter()
		maven { url 'https://jitpack.io' }
	}
}
